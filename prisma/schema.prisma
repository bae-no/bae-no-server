// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Sample {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  nickname    String       @unique
  phoneNumber String
  auth        Auth
  agreement   Agreement
  profile     Profile
  addresses   Address[]
  leaveReason LeaveReason?
}

model UserPushToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  token     String
  userId    String   @unique @db.ObjectId
}

type LeaveReason {
  createdAt DateTime @default(now())
  name      String
  reason    String
}

type Auth {
  type     String
  socialId String
}

type Agreement {
  information Boolean
  service     Boolean
}

type Profile {
  uri       String
  introduce String
}

type Address {
  alias      String
  system     String
  path       String
  detail     String
  type       String
  coordinate Coordinate
}

type Coordinate {
  type        String
  coordinates Float[]
}

model PhoneVerification {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  phoneNumber String
  code        String
  expiredAt   DateTime
  userId      String   @db.ObjectId
}

type ShareZone {
  road       String
  detail     String
  coordinate Coordinate
}

model ShareDeal {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime        @unique @default(now())
  updatedAt    DateTime        @updatedAt
  title        String
  category     String
  orderPrice   Int
  status       String
  ownerId      String          @db.ObjectId
  storeName    String
  thumbnail    String
  zone         ShareZone
  participants ParticipantInfo
}

type ParticipantInfo {
  ids       String[] @db.ObjectId
  min       Int
  current   Int
  remaining Int
}

model Chat {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @db.ObjectId
  shareDealId String   @db.ObjectId
  orderedKey  String   @unique
  message     Message
}

type Message {
  authorId String  @db.ObjectId
  type     String
  content  String
  unread   Boolean
}
